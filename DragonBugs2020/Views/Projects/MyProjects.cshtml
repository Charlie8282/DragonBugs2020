@model IEnumerable<DragonBugs2020.Models.Project>
@using DragonBugs2020.Services
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> userManager
@inject IBTAccessService accessService

@{
    ViewData["Title"] = "My Projects";
    var userId = userManager.GetUserId(User);
    var roles = userManager.GetRolesAsync(await userManager.GetUserAsync(User)).Result.FirstOrDefault();
}

<div id="accordion" class="mb-3 dash-radius">
<span class="over-div">My Project</span>

@if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
{
    <p>
        <a asp-controller="Projects" asp-action="Create">Create New</a>
    </p>
}
    @foreach (var item in Model)
    {
        <div class="card mb-1">

            <a class="text-dark" data-toggle="collapse" href="#collapseProject-@item.Id">
                <div class="card-header" id="projectHead">

                    <h5 class="m-0">
                        @Html.DisplayFor(modelItem => item.Name)
                    </h5>

                </div>
            </a>

            <div id="collapseProject-@item.Id" class="collapse" aria-labelledby="collapseProject-@item.Id" data-parent="#accordion">
                <div class="card-body">
                    <a class="nav-link my-nav" asp-area="" asp-controller="Projects" asp-action="MyProjects">
                        <span>Close</span>
                    </a>
                    @Html.Raw(item.Name)
                    @if (await accessService.CanInteractProject(userId, item.Id, roles))
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                </div>
            </div>

        </div>
    }
</div>
