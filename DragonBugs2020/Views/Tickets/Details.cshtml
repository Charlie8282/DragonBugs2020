@model DragonBugs2020.Models.Ticket

@using Microsoft.AspNetCore.Identity
@using DragonBugs2020.Services
@inject UserManager<BTUser> userManager
@inject IBTAccessService accessService
@inject IBTFileService BTFileService
@inject IBTHistoriesService BTHistoriesService

@{
    ViewData["Title"] = "Details";
    var userId = userManager.GetUserId(User);
    var roles = userManager.GetRolesAsync(await userManager.GetUserAsync(User)).Result.FirstOrDefault();
}



<span class="over-div">
    Ticket Details
    @if (await accessService.CanInteractTicket(userId, Model.Id, roles))
    {
        <span> | </span> <a class="btn edit" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
</span>
<hr />

<div class="container-fluid">
    <div class="row description-dash">
        <div class="col-md-6">
            <div class="task-detail">
                <div class="media mb-3">
                    <div class="media-body">
                        <h4 class="media-heading mt-0"></h4>
                        @*<span class="badge badge-danger">Urgent</span>*@
                    </div>
                </div>
                <span class="accordion-title">
                    @Html.DisplayFor(model => model.Title)
                </span><br />
                <div class="col-md">
                    <div class="float-right">
                        @if (Model.TicketType.Name == "Runtime")
                        {
                            <span class="runtime">Runtime</span>
                        }
                        @if (Model.TicketType.Name == "UI")
                        {
                            <span class="ui">UI</span>
                        }
                        @if (Model.TicketType.Name == "Backend")
                        {
                            <span class="backend">Backend</span>
                        }
                    </div>
                    <div class="float-right">
                        @if (Model.TicketStatus.Name == "New")
                        {
                            <span class="new">New</span>
                        }
                        @if (Model.TicketStatus.Name == "Open")
                        {
                            <span class="open">Open</span>
                        }
                        @if (Model.TicketStatus.Name == "Closed")
                        {
                            <span class="closed">Closed</span>
                        }
                    </div>
                    <div class="float-right">
                        @if (Model.TicketPriority.Name == "Low")
                        {
                            <span class="low">Low</span>
                        }
                        @if (Model.TicketPriority.Name == "High")
                        {
                            <span class="high">High</span>
                        }
                        @if (Model.TicketPriority.Name == "Urgent")
                        {
                            <span class="urgent">Urgent</span>
                        }
                    </div>
                </div>
                <span>
                    by: @Html.DisplayFor(model => model.OwnerUser.FullName)
                </span>
                <div class="row task-dates mb-0 mt-2">
                    <div class="col-md-6">
                        <h5 class="font-600 m-b-5">Created:</h5>
                        <p><small class="text-muted">@Model.Created.ToString("MMM dd, yyyy | h:mm tt")</small></p>
                    </div>
                    <div class="col-md-6">
                        <h5 class="font-600 m-b-5">Updated:</h5>
                        <p><small class="text-muted">@Model.Updated?.ToString("MMM dd, yyyy | h:mm tt")</small></p>
                    </div>
                </div>
                <div class="col-md description-dash">
                    <p class="ticket-label descrip">Description:</p>
                    
                    <p class="text-muted">
                        @Html.Raw(Model.Description)
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-6 attachment">
            <div class="over-div">Add Attachment:</div>
            <div>Description:</div>
            <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                <div asp-validation-summary="ModelOnly"></div>
                <input type="hidden" asp-for="@Model.Id" name="TicketId">
                <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control bg-dark" placeholder="Type description here..." />
                <label class="btn btn-light">
                    <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" class="form-control bg-dark" />
                </label>
                <button type="submit" class="btn create">Submit</button>
            </form>
            <div class="">Attached Files: </div><hr />
            <div class="row">
                @foreach (TicketAttachment item in Model.Attachments)
                {
                    <a asp-controller="TicketAttachments" asp-action="DownloadFile" asp-route-id="@item.Id" target="_blank">
                        <div>
                            <p class="text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                            <small>Size: @BTFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("MMM dd, yyyy")</span></small>
                        </div>
                        <div>
                            <img src="@BTFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                        </div>
                    </a>
                }
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6 comment-details">
            <span class="over-div">Comments:</span>
            <div>
                <form asp-controller="TicketComments" asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="btn btn-dark"></div>
                    @Html.Hidden("TicketId", Model.Id)
                    <div class="form-group">
                        <textarea name="Comment" class="form-control" id="mytextarea"></textarea>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </form>
            </div>
            <div class="dash-radius task-detail">
                <div class="">
                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                    {
                        <!--REPLACE WITH AVATAR BELOW-->
                        @*<img src="~/img/user-1.jpg" />*@
                        <h3 class="mt-0">@comment.User?.FullName</h3><br />

                        <span class="created">
                            Created: @comment.Created.ToString("MMM dd, yyyy | h:mm tt")
                        </span><br />

                        <span class="created">
                            Updated: @comment.Updated?.ToString("MMM dd, yyyy | h:mm tt")
                        </span>

                        <div class="comment">
                            <p>
                                @comment.Comment
                            </p>
                            @if (User.IsInRole("Admin") || (User.IsInRole("ProjectManager")))
                            {
                                <a asp-action="Edit" asp-controller="TicketComments" asp-route-id="@comment.Id">
                                    Edit
                                </a>
                            }
                        </div>
                        <hr />
                    }
                </div>
            </div>
        </div>
        <div class="col-md">
            <span class="over-div">Ticket History:</span>
            <div class="dash-radius task-detail">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Property)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OldValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NewValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Updated)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.Ticket)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.User)
                            </th>
                            @*<th></th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Histories)
                        {
                            <tr class="border-bottom">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Property)
                                </td>
                                <td>
                                    @Html.Raw(item.OldValue)
                                </td>
                                <td>
                                    @Html.Raw(item.NewValue)
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.Created)*@
                                    @item.Created.ToString("MM/dd/yyyy")
                                </td>
                                @*<td>
                                        @Html.Raw(item.Ticket.Description)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                </td>
                                @*<td>
                                        @if (await accessService.CanInteractTicket(userId, item.Id, roles))
                                        {
                                            <a asp-action="Edit" asp-route-id="@item.Id">Edit |</a>
                                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                                        }

                                    </td>*@
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>


<script>
    tinymce.init({
        selector: '#mytextarea',
        content_css: 'dark'
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}