@model DragonBugs2020.Models.ViewModels.ProjectTicketsViewModel
@using DragonBugs2020.Services
@using Microsoft.AspNetCore.Identity
@inject UserManager<BTUser> userManager
@inject IBTAccessService accessService


@{
    ViewData["Title"] = "MyTickets";
    var userId = userManager.GetUserId(User);
    var roles = userManager.GetRolesAsync(await userManager.GetUserAsync(User)).Result.FirstOrDefault();

}

<div class="row">
    <div class="col-xl-6">
        <h1>My Projects</h1>
        @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
        {
            <p>
                <a asp-controller="Tickets" asp-action="Create">Create New</a>
            </p>
        }
        <div id="accordion" class="mb-3 my-div">
            @foreach (var item in Model.Projects)
            {
                <div class="card mb-1">

                    <div class="card-header" id="projectHead">

                        <h5 class="m-0">
                            <a class="text-dark" data-toggle="collapse" href="#collapseProject-@item.Id">
                                @Html.DisplayFor(modelItem => item.Name)
                            </a>
                        </h5>

                    </div>

                    <div id="collapseProject-@item.Id" class="collapse" aria-labelledby="collapseProject-@item.Id" data-parent="#accordion">
                        <div class="card-body">
                            <a class="nav-link my-nav" asp-area="" asp-controller="Home" asp-action="Dashboard">
                                <span>Close</span>
                            </a>
                            @Html.Raw(item.Name)
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>


    <div class="col-xl-6">
        <h1>My Tickets</h1>
        @if (!User.IsInRole("NewUser"))
        {
            <p>
                <a asp-controller="Tickets" asp-action="Create">Create New</a>
            </p>
        }

        <div id="accordion2" class="mb-3 my-div">
            @foreach (var item in Model.Tickets)
            {
                <div class="card mb-1">
                    <div class="card-header" id="headingOne">
                        <h5 class="m-0">
                            <a class="text-dark" data-toggle="collapse" href="#collapseTicket-@item.Id">
                                @Html.DisplayFor(modelItem => item.Title)
                                <span style="align-content:flex-end"></span>
                                <span class="card-head"> | </span>
                                <span class="card-head">Created: @Html.DisplayFor(modelItem => item.Created)</span>
                            </a>
                        </h5>
                    </div>
                    <div id="collapseTicket-@item.Id" class="collapse" aria-labelledby="collapseTicket-@item.Id" data-parent="#accordion2">
                        <div class="card-body">
                            <a class="nav-link my-nav" asp-area="" asp-controller="Home" asp-action="Dashboard">
                                <span>Close</span>
                            </a><hr />
                            <p class="ticket-label">Description:</p>
                            <p>@Html.Raw(item.Description)</p>
                            <p class="ticket-label">Project:</p>
                            <p>@Html.DisplayFor(modelItem => item.Project.Name)</p>
                            <p class="ticket-label"></p>
                            <p>@Html.DisplayFor(modelItem => item.DeveloperUser.FullName)</p><hr />
                            @if (await accessService.CanInteractTicket(userId, item.Id, roles))
                            {
                                <a asp-controller="Tickets" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a asp-controller="Tickets" asp-action="Details" asp-route-id="@item.Id">Details</a>
                                <a asp-controller="Tickets" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div><!-- end col -->
</div><!-- end row -->




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}